class Task:
    def _init_(self, name, due_date, priority):
        self.name = name
        self.due_date = due_date
        self.priority = priority

class ToDoList:
    def _init_(self):
        self.tasks = []

    def add_task(self, task):
        self.tasks.append(task)

    def update_task(self, task_name, new_due_date, new_priority):
        for task in self.tasks:
            if task.name == task_name:
                task.due_date = new_due_date
                task.priority = new_priority
                break

    def display_tasks(self):
        if not self.tasks:
            print("No tasks available.")
        else:
            print("Tasks:")
            for task in self.tasks:
                print(f"Name: {task.name}, Due Date: {task.due_date}, Priority: {task.priority}")

def main():
    todo_list = ToDoList()

    while True:
        print("\n1. Add Task")
        print("2. Update Task")
        print("3. Display Tasks")
        print("4. Exit")

        choice = input("Enter your choice: ")

        if choice == "1":
            # Get task details from the user and add it to the to-do list
            name = input("Enter task name: ")
            due_date = input("Enter due date: ")
            priority = input("Enter priority: ")
            new_task = Task(name, due_date, priority)
            todo_list.add_task(new_task)
            print("Task added successfully.")

        elif choice == "2":
            # Get task name and new details from the user and update the task
            task_name = input("Enter task name to update: ")
            new_due_date = input("Enter new due date: ")
            new_priority = input("Enter new priority: ")
            todo_list.update_task(task_name, new_due_date, new_priority)
            print("Task updated successfully.")

        elif choice == "3":
            # Display the tasks
            todo_list.display_tasks()

        elif choice == "4":
            break

        else:
            print("Invalid choice. Please try again.")

if _name_ == "_main_":
    main()
